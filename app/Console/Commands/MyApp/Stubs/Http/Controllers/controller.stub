<?php

namespace $NAMESPACE$;

use Illuminate\Http\Request;
use Illuminate\Http\Response;
use App\Http\Controllers\Controller;
use $MODEL_CLASS_NAMESPACE$\$MODEL_CLASS$;
use $SERVICE_CLASS_NAMESPACE$\$SERVICE_CLASS$;
use $REQUEST_CLASS_NAMESPACE$\$REQUEST_CLASS$;

class $CONTROLLER_CLASS$ extends Controller
{
    public $service;
    public $data;

    public function __construct()
    {
        $this->service = new $SERVICE_CLASS$;
        $this->data = [];
    }

    public function index()
    {
        $this->authorize('viewAny', $MODEL_CLASS$::class);
        $$MODEL_VARIABLE_PLURAL$ = $this->service->getData();
        return view('$VIEW_PATH$.index', compact('$MODEL_VARIABLE_PLURAL$'));
    }

    public function create()
    {
        $this->authorize('create', $MODEL_CLASS$::class);
        $$MODEL_VARIABLE$ = new $MODEL_CLASS$;
        return view('$VIEW_PATH$.create', compact('$MODEL_VARIABLE$'));
    }

    public function store($REQUEST_CLASS$ $request)
    {
        $this->authorize('create', $MODEL_CLASS$::class);
        $data = $request->validated();
        $this->service->create($data);

        $message = __('my_app.messages.data_created');
        flash($message)->success();
        return redirect()->route('$ROUTE_NAME$index');
    }

    public function show($MODEL_CLASS$ $$MODEL_VARIABLE$)
    {
        $this->authorize('view', $$MODEL_VARIABLE$);
        return view('$VIEW_PATH$.show', compact('$MODEL_VARIABLE$'));
    }

    public function edit($MODEL_CLASS$ $$MODEL_VARIABLE$)
    {
        $this->authorize('update', $$MODEL_VARIABLE$);
        return view('$VIEW_PATH$.edit', compact('$MODEL_VARIABLE$'));
    }

    public function update($REQUEST_CLASS$ $request, $MODEL_CLASS$ $$MODEL_VARIABLE$)
    {
        $this->authorize('update', $$MODEL_VARIABLE$);
        $data = $request->validated();
        $this->service->update($$MODEL_VARIABLE$, $data);

        $message = __('my_app.messages.data_updated');
        flash($message)->success();
        return redirect()->route('$ROUTE_NAME$index');
    }

    public function destroy($MODEL_CLASS$ $$MODEL_VARIABLE$)
    {
        $this->authorize('delete', $$MODEL_VARIABLE$);
        $this->service->delete($$MODEL_VARIABLE$);

        $message = __('my_app.messages.data_deleted');
        flash($message)->success();
        return redirect()->route('$ROUTE_NAME$index');
    }
}
